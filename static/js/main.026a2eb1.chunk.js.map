{"version":3,"sources":["components/UI/Card.js","components/Expense/ExpenseFilter.js","components/Expense/ExpenseDate.js","components/Expense/ExpenseItem.js","components/Expense/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expense/ExpensesChart.js","components/Expense/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","onChange","event","onFilter","target","value","year","ExpenseDate","month","date","toLocaleString","day","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expense","useState","selectedYear","setSelectedYear","filteredItems","filter","exp","toString","enteredExpenseFilter","ExpenseForm","expenseTitle","setExpenseTitle","expenseAmount","setExpenseAmount","expenseDate","setExpenseDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","placeholder","min","step","onClick","onCancel","NewExpense","currentState","newState","enteredExpenseData","random","onAddingExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.026a2eb1.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const classes = \"card \"+props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n};\r\nexport default Card;","import './ExpenseFilter.css';\r\nconst ExpensesFilter = (props) => {\r\n  const onChangeHandler = (event) => {\r\n    props.onFilter(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n        <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select \r\n              onChange={onChangeHandler}\r\n              value={props.year}\r\n            >\r\n            <option value='2022'>2022</option>\r\n            <option value='2021'>2021</option>\r\n            <option value='2020'>2020</option>\r\n            <option value='2019'>2019</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <div>\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n      </div>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">$ {props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n        {props.items.map( expense => (\r\n            <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n            />\r\n        ))}\r\n    </ul>\r\n}\r\nexport default ExpensesList;","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value/props.maxValue)*100)+'%';\r\n    }\r\n\r\n    return (\r\n    <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}>\r\n            </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">\r\n            {props.label}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default ChartBar;","import React from \"react\";\r\nimport './Chart.css';\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    \r\n    return (\r\n    <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint => { return (\r\n            <ChartBar \r\n                key ={dataPoint.label}\r\n                value={dataPoint.value} \r\n                maxValue={totalMaximum}\r\n                label={dataPoint.label}\r\n            />)}\r\n        )}\r\n    </div>)\r\n}\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) =>  {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n    for(const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return (\r\n    <Chart\r\n        dataPoints = {chartDataPoints}\r\n    />)\r\n}\r\nexport default ExpensesChart;","import \"./Expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst  Expense = (props) => {\r\n  const [selectedYear, setSelectedYear] = useState(\"2022\")\r\n  const onExpenseFilter = (enteredExpenseFilter) => {\r\n    setSelectedYear(enteredExpenseFilter);\r\n  }\r\n\r\n  const filteredItems = props.items.filter( exp => exp.date.getFullYear().toString()===selectedYear);\r\n  \r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          year={selectedYear}\r\n          onFilter={onExpenseFilter}\r\n        />\r\n        <ExpensesChart\r\n          expenses={filteredItems}\r\n        />\r\n        <ExpensesList\r\n          items={filteredItems}\r\n        />\r\n      </Card>\r\n    </li>)\r\n}\r\nexport default Expense;","import React, {useState} from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [expenseTitle, setExpenseTitle] = useState(\"\");\r\n    const [expenseAmount, setExpenseAmount] = useState(\"\");\r\n    const [expenseDate, setExpenseDate] = useState(\"\");\r\n    \r\n    const titleHandler = (event) => {\r\n        setExpenseTitle(event.target.value);\r\n    };\r\n    const amountHandler = (event) => {\r\n        setExpenseAmount(event.target.value);\r\n    };\r\n    const dateHandler = (event) => {\r\n        setExpenseDate(event.target.value);\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: expenseTitle,\r\n            amount: +expenseAmount,\r\n            date: new Date(expenseDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setExpenseTitle(\"\");\r\n        setExpenseAmount(\"\");\r\n        setExpenseDate(\"\");\r\n    }\r\n    const cancelHandler = () => {\r\n        props.onCancel()\r\n    }\r\n\r\n    return (\r\n    <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label>Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    value={expenseTitle} \r\n                    placeholder=\"Add Title\" \r\n                    onChange={titleHandler}\r\n                />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Amount</label>\r\n                <input\r\n                    type=\"number\" \r\n                    value={expenseAmount} \r\n                    placeholder=\"Add Amount\" \r\n                    onChange={amountHandler} \r\n                    min='0.01' \r\n                    step='0.01'\r\n                />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label>Date</label>\r\n                <input \r\n                    type=\"date\" \r\n                    value={expenseDate} \r\n                    onChange={dateHandler} \r\n                    min=\"2019-01-01\" \r\n                    max=\"2022-12-31\" \r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n            <button onClick={cancelHandler}>Cancel</button>\r\n            <button>Add Expense</button>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\nexport default ExpenseForm;","import './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from 'react';\r\n\r\nconst NewExpense = (props) => {\r\n    const [currentState, newState] = useState(\"false\")\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id : Math.random().toString()\r\n        };\r\n        props.onAddingExpense(expenseData);\r\n        newState(\"false\")\r\n    }\r\n    const cancelHandler = () =>{\r\n        newState(\"false\")\r\n    }\r\n    const addNewExpenseHandler = () => {\r\n        newState(\"true\")\r\n    }\r\n\r\n    if(currentState === \"true\") return <div className=\"new-expense\">\r\n        <ExpenseForm\r\n            onSaveExpenseData={saveExpenseDataHandler}\r\n            onCancel={cancelHandler}\r\n        />\r\n    </div>\r\n    return <div className=\"new-expense\">\r\n        <button onClick={addNewExpenseHandler} >Add New Expense</button>\r\n    </div>\r\n}\r\nexport default NewExpense;","import { useState } from \"react\";\nimport Expense from \"./components/Expense/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES)\n  const addExpenseDataHandler = (expenseData) => {\n    setExpenses(prevExpenses => {\n      return [expenseData, ...prevExpenses]})\n  }\n\n  return (\n    <div>\n      <NewExpense\n        onAddingExpense={addExpenseDataHandler}\n      />\n      <Expense\n        items={expenses}\n      />\n    </div>\n  );\n}\n\n\nconst DUMMY_EXPENSES = [\n  {\n    title: \"Gaming Laptop\",\n    amount: \"2000\",\n    date: new Date(2022, 4, 23),\n    id: Math.random().toString()\n  },\n  {\n    title: \"Hayabusa\",\n    amount: \"50000\",\n    date: new Date(2021, 5, 10),\n    id: Math.random().toString()\n  },\n  {\n    title: \"Lamborghini\",\n    amount: \"250000\",\n    date: new Date(2019, 6, 13),\n    id: Math.random().toString()\n  },\n  {\n    title: \"Trip To Miami\",\n    amount: \"27000\",\n    date: new Date(2022, 2, 10),\n    id: Math.random().toString()\n  },\n  {\n    title: \"Donation\",\n    amount: \"30000\",\n    date: new Date(2021, 4, 23),\n    id: Math.random().toString()\n  },\n  {\n    title: \"House\",\n    amount: \"750000\",\n    date: new Date(2019, 9, 3),\n    id: Math.random().toString()\n  },\n  {\n    title: \"MacBook\",\n    amount: \"7000\",\n    date: new Date(2022, 0, 7),\n    id: Math.random().toString()\n  },\n  {\n    title: \"iPhone\",\n    amount: \"5000\",\n    date: new Date(2021, 11, 24),\n    id: Math.random().toString()\n  },\n  {\n    title: \"iWatch\",\n    amount: \"250\",\n    date: new Date(2019, 4, 23),\n    id: Math.random().toString()\n  },\n];\n\nexport default App;","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}